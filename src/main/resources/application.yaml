spring:
  profiles:
    active: default, dev

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.database}?zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true
    username: ${mysql.username}
    password: ${mysql.password}

  rabbitmq:
    listener:
      simple:
        prefetch: 1 # 每次只能获取一条消息，处理完成才能获取下一个消息
        #结果是监听器1的处理速度明显快于监听器2的速度
        #因为监听器1消费完一个消息之后 监听器2还没有消费完数据
  mail:
    host: smtp.qq.com #SMTP服务器地址   qq邮箱服务器
    username: 1293177585@qq.com #登陆账号  发送方邮箱
    password: zrfndvhlsxfsbabe #登陆密码（或授权码）
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    #      from: 1293177585@qq.com #邮件发信人（即真实邮箱）
    #      thymeleaf:
    #        cache: false
    #        prefix: classpath:/views/
    servlet:
      multipart:
        max-file-size: 10MB #限制单个文件大小
        max-request-size: 50MB #限制请求总量
    default-encoding: utf-8


mybatis-plus:
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射 address_book ---> addressBook
    map-underscore-to-camel-case: true
      #配置Mapper映射文件
    mapper-locations: classpath:/mappers/*.xml
#  global-config:
#    db-config:
#      # 全局 逻辑删除配置
#      logic-delete-field: ifDeleted
#      logic-delete-value: 1
#      logic-not-delete-value: 0
#      id-type: auto


#最大连接数
http:
  maxTotal: 100
  #设置到某个路由的最大连接数
  defaultMaxPerRoute: 20
  #连接超时时间（单位毫秒）
  connectTimeout: 10000
  #从连接池中获取到连接的最长时间（单位毫秒）
  connectionRequestTimeout: 5000
  #数据传输的最长时间（单位毫秒）
  socketTimeout: 10000
  #空闲永久连接检查间隔，官方推荐使用这个来检查永久链接的可用性，而不推荐每次请求的时候才去检查
  validateAfterInactivity: 2000
